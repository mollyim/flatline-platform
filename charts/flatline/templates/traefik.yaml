{{- $componentName := "traefik" -}}
{{- $componentValues := .Values.traefikResources -}}

{{- $ctx := dict
    "Release"          .Release
    "Chart"            .Chart
    "Values"           .Values
    "Capabilities"     .Capabilities
    "Files"            .Files
    "Template"         .Template
    "componentName"    $componentName
    "componentValues"  $componentValues
-}}

{{- if $ctx.componentValues.enabled -}}

{{ template "common.secret" $ctx }}

---

{{- $hostname := (required "A valid hostname must be provided for Flatline!" .Values.global.hostname) }}
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: {{ include "common.fullnameWithComponent" $ctx }}-default
  labels:
    {{- include "common.labels" . | nindent 4 }}
spec:
  entryPoints:
    - websecure
  routes:
    {{- if .Values.whisperService.enabled }}
    - match: Host(`whisper.{{ $hostname }}`)
      kind: Rule
      services:
        - name: {{ include "common.fullname" . }}-whisper-service
          port: {{ .Values.whisperService.service.ports.default.port }}
    - match: Host(`whisper-admin.{{ $hostname }}`)
      kind: Rule
      services:
        - name: {{ include "common.fullname" . }}-whisper-service
          port: {{ .Values.whisperService.service.ports.admin.port }}
    {{- end }}
    {{- if .Values.storageService.enabled }}
    - match: Host(`storage.{{ $hostname }}`)
      kind: Rule
      services:
        - name: {{ include "common.fullname" . }}-storage-service
          port: {{ .Values.storageService.service.ports.default.port }}
    - match: Host(`storage-admin.{{ $hostname }}`)
      kind: Rule
      services:
        - name: {{ include "common.fullname" . }}-storage-service
          port: {{ .Values.storageService.service.ports.admin.port }}
    {{- end }}
    {{- if .Values.contactDiscoveryService.enabled }}
    - match: Host(`cds.{{ $hostname }}`)
      kind: Rule
      services:
        - name: {{ include "common.fullname" . }}-contact-discovery-service
          port: {{ .Values.contactDiscoveryService.service.ports.default.port }}
    {{- end }}
    {{- if .Values.callingServiceFrontend.enabled }}
    - match: Host(`calling.{{ $hostname }}`)
      kind: Rule
      services:
        - name: {{ include "common.fullname" . }}-calling-service-frontend
          port: {{ .Values.callingServiceFrontend.service.ports.default.port }}
    {{- end }}
    {{- if .Values.tus.enabled }}
    - match: Host(`cdn-tus.{{ $hostname }}`)
      kind: Rule
      services:
        - name: {{ include "common.fullname" . }}-tus
          port: {{ .Values.tus.service.ports.default.port }}
    {{- end }}
    {{- if .Values.localstack.enabled }}
    - match: Host(`cdn-s3.{{ $hostname }}`)
      kind: Rule
      services:
        - name: {{ include "common.fullname" . }}-localstack
          port: {{ .Values.localstack.service.ports.default.port }}
      middlewares:
        - name: {{ include "common.fullnameWithComponent" $ctx }}-add-prefix-cdn-s3
    {{- end }}
  tls:
    secretName: {{ $ctx.componentValues.tls.secretName | default (include "common.fullnameWithComponent" $ctx) }}
    options:
      {{- if $ctx.componentValues.tls.optionsName }}
      name: {{ $ctx.componentValues.tls.optionsName }}
      {{- end }}

---

{{- if .Values.localstack.enabled }}
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ include "common.fullnameWithComponent" $ctx }}-add-prefix-cdn-s3
spec:
  addPrefix:
    prefix: /whisper-service-cdn
{{- end }}

---

{{- if $ctx.componentValues.chart.valuesOverride }}
apiVersion: helm.cattle.io/v1
kind: HelmChartConfig
metadata:
  name: {{ $ctx.componentValues.chart.name | default "traefik" }}
  namespace: {{ $ctx.componentValues.chart.namespace | default "kube-system" }}
spec:
  valuesContent: |-
    {{- toYaml $ctx.componentValues.chart.valuesOverride | nindent 4 }}
{{- end }}

{{- end }}
